@model BusTicketWebApp.Models.Member

@{
    ViewBag.Title = "OrderDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<input type="hidden" name="f_name_in_load" id="f_name_in_load" value="@Model.FirstName" />
<input type="hidden" name="l_name_in_load" id="l_name_in_load" value="@Model.LastName" />
<input type="hidden" name="email_in_load" id="email_in_load" value="@Model.Email" />
<input type="hidden" name="phone_in_load" id="phone_in_load" value="@Model.PhoneNumber" />

<div class="col-xs-12">
    <div class="row">
        <div class="management_info">
            <div class="row">
                <div class="col-xs-6" style="border:1px solid black;">
                    <p>Member Id <span style="color:cornflowerblue">@Model.Id</span></p>
                </div>
                <div class="col-xs-6" style="border:1px solid black;overflow:hidden;">
                    <p>Registration Date <span style="color:cornflowerblue">@Model.CreateDate</span></p>
                </div>
                <div class="col-xs-6" style="border:1px solid black">
                    <p>Member Status <span style="color:cornflowerblue">@Model.StatusTxt</span></p>
                </div>
                <div class="col-xs-6" style="border:1px solid black">
                    @* <p>GMO Order Id <span style="color:cornflowerblue">@Model.Order.GmoOrderNo</span></p>*@
                </div>
            </div>
        </div>
        <div class="ordering_information" style="margin-top:30px;">
            <div class="row">
                <h3 style="padding-left: 14px;">Customer Information</h3>
            </div>
            <input type="hidden" name="userId" id="userId" value="@Model.Id" />
            <div class="row">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label for="userFirstName">First Name</label>
                        <input type="text" class="form-control" id="userFirstName" name="userFirstName" placeholder="First name" value="@Model.FirstName">
                    </div>
                    <div class="form-group">
                        <label for="userLastName">Last Name</label>
                        <input type="text" class="form-control" id="userLastName" name="userLastName" placeholder="Last Name" value="@Model.LastName">
                    </div>
                    <div class="form-group">
                        <label for="userPhone">Phone</label>
                        <input type="text" class="form-control" id="userPhone" name="userPhone" onchange="return CheckNumber(this.id, false);" onkeypress="return blockNonNumbers(this, event, false, false, false);" placeholder="" value="@Model.PhoneNumber">
                    </div>
                </div>
                <div class="col-xs-offset-1 col-xs-7">
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                <label for="userEmail">Email</label>
                                <input type="text" class="form-control" id="userEmail" name="userEmail" value="@Model.Email">
                                <p class="text-danger" id="userEmail"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="ticket_information">
            <div class="row">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label for="i_ticket_type">Status</label>
                        <select class="form-control" name="ticket_type" disabled>
                            @*@foreach (var item in Model.TicketTypes)
                                {
                                    if (item.Id == Model.Order.TicketTypeId)
                                    {
                                        <option value="@item.Id" selected>@item.TypeName</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.TypeName</option>
                                    }

                                }*@
                            @{
                                string enabledSelect = "";
                                string stoppedSelect = "";
                                if (Convert.ToInt32(Model.Status) == 1)
                                {
                                    enabledSelect = "Enabled";
                                }
                                else
                                {
                                    stoppedSelect = "Stopped";
                                }
                            }
                            <option value="0" @stoppedSelect>Stopped</option>
                            <option value="1" @enabledSelect>Enabled</option>
                        </select>
                        <input type="hidden" name="user-status" id="user-status" value="@Model.Status" />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12">
                <p class="text-center" id="operational_message"></p>
            </div>
            <div class="col-xs-offset-3 col-xs-3">
                @{
                    if (Convert.ToInt32(Model.Status) == 1)
                    {
                        <button class="btn  btn-warning" id="btnUpdate" style="width:100%;">Member Update</button>
                    }
                    else
                    {
                        <button class="btn  btn-warning" id="btnUpdate" style="width:100%;pointer-events: none;cursor: default;opacity: .4;">Member Update</button>                        
                    }
                }
            </div>
            <div class="col-xs-3">
                @{
                    if (Convert.ToInt32(Model.Status) == 1)
                    {
                        <button class="btn" style="background-color:black;color:white" id="btnCancel">Member Stopped</button>                        
                    }
                    else
                    {
                        <button class="btn  btn-warning" id="btnUpdate" style="width:100%;background-color:black;color:white;pointer-events: none;cursor: default;opacity: .4;">Member Stopped</button>
                    }
                }
            </div>            
        </div>
        <br />
        @*<div class="row">
                <div class="col-xs-12">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Device Type</th>
                                <th>Environment</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Model.DeviceName</td>
                                <td>@Model.UserAgent</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>*@
        <div class="row">
            <div class="col-xs-12">
                <table class="table" id="update_summery_table" style="display:none">
                    <thead>
                        <tr>
                            <th>Updated At</th>
                            <th>Customer Name</th>
                            <th>Status</th>
                            <th>Details History</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker();

            $('#userFirstName').on('keyup', function () {
                var firstNameValue = $(this).val();
                if (firstNameValue == null || firstNameValue == "") {
                    $('#userFirstName').html("enter first name");
                    $('#btnUpdate').attr('disabled', 'disabled');
                    return false;
                }
                else {
                    $('#userFirstName').html("");
                    $('#btnUpdate').removeAttr('disabled');
                }
            });
            $('#userLastName').on('keyup', function () {
                var lastNameValue = $(this).val();
                if (lastNameValue == null || lastNameValue == "") {
                    $('#userLastName').html("enter last name");
                    $('#btnUpdate').attr('disabled', 'disabled');
                    return false;
                }
                else {
                    $('#userLastName').html("");
                    $('#btnUpdate').removeAttr('disabled');
                }
            });
            $('#email').on('keyup', function () {
                var emailValue = $(this).val();
                if (emailValue == null || emailValue == "") {
                    $('#email').html("enter email");
                    $('#btnUpdate').attr('disabled', 'disabled');
                    return false;
                }
                else {
                    $('#email').html("");
                    $('#btnUpdate').removeAttr('disabled');
                }
            });

            $('#phone').on('keyup', function () {
                var phoneNumberValue = $(this).val();
                if (phoneNumberValue == null || phoneNumberValue == "") {
                    $('#phone').html("enter phone number");
                    $('#btnUpdate').attr('disabled', 'disabled');
                    return false;
                }
                else {
                    $('#phone').html("");
                    $('#btnUpdate').removeAttr('disabled');
                }
            });

            $('#btnCancel').on('click', function () {
                $.confirm({
                    title: 'Confirm!',
                    content: 'Delete?',
                    buttons: {
                        confirm: function () {
                            let userId = $('#userId').val();

                            let first_name = $('#userFirstName').val();
                            let last_name = $('#userLastName').val();
                            let email = $('#userEmail').val();
                            let phone = $('#userPhone').val();

                            let updateDataAsString = `{'Id':'${userId}','FirstName':'${first_name}','LastName':'${last_name}','Email':'${email}','PhoneNumber':'${phone}'}`;


                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("DeleteMember", "Member")',
                                data: {
                                    updateData: updateDataAsString
                                },
                                success: function (data) {
                                    console.log(data);
                                    if (data.Status == 'ok') {

                                        $.alert({
                                            title: 'Success!!!',
                                            content: data.Message,
                                        });
                                        $('#update_summery_table').css('display', 'inline-table');
                                        $('#cancellationfee_message').css('display','block');
                                        $('#operational_message').html(data.Message);
                                        $('#btnUpdate').attr('disabled', 'disabled');
                                        $('#btnCancel').attr('disabled', 'disabled');
                                        $('#update_summery_table tbody').append(`<tr><td>${data.UpdateData.UpdatedAt}</td><td>${data.UpdateData.CustomerName}</td><td>${data.UpdateData.TotalPrice}</td><td><a href="@Url.Action("MemberHistory", "Member", new {Id = Model.Id })" target="_blank;">History</a></td></tr>`);
                                    }
                                    else {
                                        $.alert({
                                            title: 'Failed!!!',
                                            content: data.Message,
                                        });
                                        $('#operational_message').html(data.Message);
                                    }

                                },
                                complete: {
                                }
                            });
                        },
                        cancel: function () {
                            //$.alert('Canceled!');
                        },
                    }
                });

            });
            function IsValidRequest(changedFirstName, changedLastName, changedEmail, changedPhone) {
                let isValid = false;

                let strFirstNameInLoad = $("#f_name_in_load").val();
                let strLastNameInLoad = $("#l_name_in_load").val();
                let strEmailInLoad = $("#email_in_load").val();
                let strPhoneInLoad = $("#phone_in_load").val();

                if (strFirstNameInLoad.toLowerCase() != changedFirstName.toLowerCase()) {
                    isValid = true;
                } else if (strLastNameInLoad.toLowerCase() != changedLastName.toLowerCase()) {
                    isValid = true;
                }
                else if (strEmailInLoad.toLowerCase() != changedEmail.toLowerCase()) {
                    isValid = true;
                }
                else if (strPhoneInLoad != changedPhone) {
                    isValid = true;
                }

                return isValid;

            }
            $('#btnUpdate').on('click', function () {
                $.confirm({
                    title: 'Confirm!',
                    content: 'Update?',
                    buttons: {
                        confirm: function () {
                            let userId = $('#userId').val();

                            let first_name = $('#userFirstName').val();
                            let last_name = $('#userLastName').val();
                            let email = $('#userEmail').val();
                            let phone = $('#userPhone').val();

                            let isValidRequest = IsValidRequest(first_name, last_name, email, phone)

                            if (!isValidRequest) {
                                alert("Please change the information first for update.");
                                return false;
                            }

                            let updateDataAsString = `{'Id':'${userId}','FirstName':'${first_name}','LastName':'${last_name}','Email':'${email}','PhoneNumber':'${phone}'}`;

                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("UpdateMember", "Member")',
                                data: {
                                    updateData: updateDataAsString
                                },
                                success: function (data) {
                                    console.log(data);
                                    if (data.Status == 'ok') {
                                        $.alert({
                                            title: 'Success!!!',
                                            content: data.Message,
                                        });
                                        $('#update_summery_table').css('display','inline-table');
                                        //$('#operational_message').html(data.Message);
                                        let userStatus = $("#user-status").val();
                                        let statusTxt = "";
                                        if (userStatus == 1) {
                                            statusTxt = "Enabled";
                                        } else {
                                            statusTxt = "Stopped";
                                        }
                                        $('#update_summery_table tbody').append(`<tr><td>${data.UpdateData.UpdatedAt}</td><td>${data.UpdateData.UserName}</td><td>${statusTxt}</td><td><a href="@Url.Action("MemberHistory", "Member", new {Id = Model.Id })" target="_blank" style="padding-left:27px;">History</a></td></tr>`);
                                        //("#order_id").val(data.UpdateData.UpdatedOrderId);

                                        //update hidden field for validation purpose
                                        $('#f_name_in_load').val(first_name);
                                        $('#l_name_in_load').val(last_name);
                                        $('#email_in_load').val(email);
                                        $('#phone_in_load').val(phone);
                                    }
                                    else {
                                        $.alert({
                                            title: 'Failed!!!',
                                            content: data.Message,
                                        });
                                        //$('#operational_message').html(data.Message);
                                    }

                                },
                                complete: {
                                }
                            });
                        },
                        cancel: function () {
                            //$.alert('Canceled!');
                        },
                    }
                });

            });
        });

        function CheckNumber(svalue, isDependent) {
            var val = document.getElementById(svalue).value;
            var l = val.length;
            var blnState = false;
            //var isChkval = $('#chkVacancies').prop('checked');

            if (isDependent == false) {
                for (i = 0; i < l; i++) {
                    if (!(val.charCodeAt(i) >= 48 && val.charCodeAt(i) <= 57))
                        blnState = true;

                }
                if (blnState == true) {
                    alert("Please enter numeric value only.");
                    document.getElementById(svalue).value = "";
                    document.getElementById(svalue).focus();
                    return false;
                }
            }
        }
        function blockNonNumbers(obj, e, allowDecimal, allowNegative, isDependent) {
            var key;
            var isCtrl = false;
            var keychar;
            var reg;

            $(".question").each(function (index) {
                let strQuestionTxt = $("#question" + (index + 1)).val();
                let strLimitNumber = $("#questionLimit" + (index + 1)).val();

                if (strQuestionTxt == "" || strLimitNumber == "") {
                    isThereEmptyQField = true;
                    $("#setInterviewBtn").prop("disabled", true);
                } else {
                    $("#setInterviewBtn").prop("disabled", false);
                }
            });

            if (isDependent == false) {
                if (window.event) {
                    key = e.keyCode;
                    isCtrl = window.event.ctrlKey;
                } else if (e.which) {
                    key = e.which;
                    isCtrl = e.ctrlKey;
                }

                if (isNaN(key)) return true;

                keychar = String.fromCharCode(key);

                // CHECK FOR BACKSPACE OR DELETE, Ctrl 
                if (key == 8 || isCtrl) {
                    return true;
                }

                reg = /\d/;
                var isFirstN = allowNegative ? keychar == '-' && obj.value.indexOf('-') == -1 : false;
                var isFirstD = allowDecimal ? keychar == '.' && obj.value.indexOf('.') == -1 : false;

                return isFirstN || isFirstD || reg.test(keychar);
            }
        }
    </script>

}

